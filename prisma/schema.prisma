generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id             String   @id @default(cuid())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  name           String?
  email          String   @unique
  hashedPassword String
  role           Role     @default(USER)

	tokens Token[]
  decks Deck[]
}

enum TokenType {
  RESET_PASSWORD
}

model Token {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  hashedToken String  @unique
  type        TokenType
  expiresAt   DateTime
  sentTo      String

  user   User @relation(fields: [userId], references: [id])
  userId String
}

model Deck {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String

  user   User   @relation(fields: [userId], references: [id])
  userId String
  cards  Card[]
}

model Card {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  front     String
  back      String

  deck      Deck       @relation(fields: [deckId], references: [id])
  deckId    String
	answers Answer[]
}

model Answer {
	id String @id @default(cuid())
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
	correctness Float

	card Card @relation(fields: [cardId], references: [id])
	cardId String
}
